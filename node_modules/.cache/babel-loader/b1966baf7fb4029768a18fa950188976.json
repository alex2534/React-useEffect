{"ast":null,"code":"var _jsxFileName = \"/home/ti/\\xC1rea de Trabalho/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/input/Input\";\nimport AuthContext from \"../../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity !\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEAN-UP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"SAhhqeym5aQW7LjU6LG25NhEVdM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ti/√Årea de Trabalho/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","Input","AuthContext","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","emailInputRef","passwordInputRef","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/input/Input\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst emailReducer = (state, action) => {\n\tif (action.type === \"USER_INPUT\") {\n\t\treturn { value: action.val, isValid: action.val.includes(\"@\") };\n\t}\n\tif (action.type === \"INPUT_BLUR\") {\n\t\treturn { value: state.value, isValid: state.value.includes(\"@\") };\n\t}\n\treturn { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n\tif (action.type === \"USER_INPUT\") {\n\t\treturn { value: action.val, isValid: action.val.trim().length > 6 };\n\t}\n\tif (action.type === \"INPUT_BLUR\") {\n\t\treturn { value: state.value, isValid: state.value.trim().length > 6 };\n\t}\n\treturn { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n\t// const [enteredEmail, setEnteredEmail] = useState(\"\");\n\t// const [emailIsValid, setEmailIsValid] = useState();\n\t// const [enteredPassword, setEnteredPassword] = useState(\"\");\n\t// const [passwordIsValid, setPasswordIsValid] = useState();\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\tconst [emailState, dispatchEmail] = useReducer(emailReducer, {\n\t\tvalue: \"\",\n\t\tisValid: null,\n\t});\n\tconst [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n\t\tvalue: \"\",\n\t\tisValid: null,\n\t});\n\n\tconst authCtx = useContext(AuthContext);\n\tuseEffect(() => {\n\t\tconsole.log(\"EFFECT RUNNING\");\n\n\t\treturn () => {\n\t\t\tconsole.log(\"EFFECT CLEANUP\");\n\t\t};\n\t}, []);\n\n\tconst { isValid: emailIsValid } = emailState;\n\tconst { isValid: passwordIsValid } = passwordState;\n\n\tuseEffect(() => {\n\t\tconst identifier = setTimeout(() => {\n\t\t\tconsole.log(\"Checking form validity !\");\n\t\t\tsetFormIsValid(emailIsValid && passwordIsValid);\n\t\t}, 500);\n\t\treturn () => {\n\t\t\tconsole.log(\"CLEAN-UP\");\n\t\t\tclearTimeout(identifier);\n\t\t};\n\t}, [emailIsValid, passwordIsValid]);\n\n\tconst emailChangeHandler = (event) => {\n\t\tdispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n\t\tsetFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n\t};\n\tconst passwordChangeHandler = (event) => {\n\t\tdispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n\t\t// setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\tdispatchEmail({ type: \"INPUT_BLUR\" });\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\tdispatchPassword({ type: \"INPUT_BLUR\" });\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tauthCtx.onLogin(emailState.value, passwordState.value);\n\t};\n\treturn (\n\t\t<Card className={classes.login}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<Input\n\t\t\t\t\tref={emailInputRef}\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel=\"E-Mail\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tisValid={emailIsValid}\n\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tisValid={passwordIsValid}\n\t\t\t\t\tvalue={passwordState.value}\n\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<Button type=\"submit\" className={classes.btn}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}